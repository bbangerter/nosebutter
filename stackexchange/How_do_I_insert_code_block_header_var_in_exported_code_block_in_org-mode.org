* Answer - Try 2
** Code
*** expand-src-block
#+NAME: make-expand-src-block
#+BEGIN_SRC org :results drawer replace :exports code 

  ,#+NAME: expand-src-block
  ,#+BEGIN_SRC elisp :var block-name="" :var datum="" :var info="" :var lang="" :var body="" :exports code
    (save-excursion
      (org-babel-goto-named-src-block block-name)
      (setq datum (org-element-at-point))
      t)
    (setq info (org-babel-get-src-block-info nil datum))
    (setq lang (nth 0 info))
    (setq body (org-babel-expand-src-block nil info))
    (format "%s" body)
  ,#+END_SRC

#+END_SRC

#+RESULTS: make-expand-src-block
:RESULTS:

#+NAME: expand-src-block
#+BEGIN_SRC elisp :var block-name="" :var datum="" :var info="" :var lang="" :var body="" :exports code
  (save-excursion
    (org-babel-goto-named-src-block block-name)
    (setq datum (org-element-at-point))
    t)
  (setq info (org-babel-get-src-block-info nil datum))
  (setq lang (nth 0 info))
  (setq body (org-babel-expand-src-block nil info))
  (format "%s" body)
#+END_SRC
:END:

*** wrap-code

#+BEGIN_SRC org :results drawer replace :exports code 

  ,#+NAME: wrap-code
  ,#+BEGIN_SRC elisp :var body="code-body" :var lang="code-lang" :var params='(":exports" "both" ":results"  "verbatim")
    (concat 
     "#+begin_src "
     lang " " (mapconcat (function (lambda (x) (format "%s" x))) params " ") " \n"
     body
     "\n#+end_src"
     )
  ,#+END_SRC

#+END_SRC

#+RESULTS:
:RESULTS:

#+NAME: wrap-code
#+BEGIN_SRC elisp :var body="code-body" :var lang="code-lang" :var params='(":exports" "both" ":results"  "verbatim")
  (concat 
   "#+begin_src "
   lang " " (mapconcat (function (lambda (x) (format "%s" x))) params " ") " \n"
   body
   "\n#+end_src"
   )
#+END_SRC
:END:


* Answer - Try 1
** Embed =org-babel-variable-assignments:R= call into =R= code block using =elisp= and =noweb=

1. Create an =elisp= block without =:var= headers, e.g. /convert-data-to-R-code/, that returns results from =org-babel-variable-assignments:R= function.

   #+NAME: make-example1
   #+BEGIN_SRC org :results drawer replace :exports code 

     ,#+NAME: convert-data-to-R-code
     ,#+BEGIN_SRC elisp  :exports none 
       (mapconcat 'identity (org-babel-variable-assignments:R params) " ")
     ,#+END_SRC

   #+END_SRC

   #+RESULTS: make-example1
   :RESULTS:

   #+NAME: convert-data-to-R-code
   #+BEGIN_SRC elisp  :exports none 
     (mapconcat 'identity (org-babel-variable-assignments:R params) " ")
   #+END_SRC
   :END:

2. Call =elisp= block, /convert-data-to-R-code/, in =R= code block during export via =noweb=

   #+BEGIN_QUOTE
    *Note:* Pass original =:var= headers inside square brackets =[]= to =elisp= code block, e.g. :var table="./filename_example-table.tsv"
   #+END_QUOTE

   #+NAME: make-example2
   #+BEGIN_SRC org :results drawer replace :exports both 

     ,#+BEGIN_SRC R :results replace output  :noweb yes 
     <<convert-data-to-R-code[ :var table="./filename_example-table.tsv"]()>>
     dim(table)
     ,#+END_SRC

   #+END_SRC

     After exporting, the =R= code should contain missing variable assignments.
   #+RESULTS: make-example2
   :RESULTS:

   #+BEGIN_SRC R :results replace output  :noweb yes :tangle yes 
   <<convert-data-to-R-code[ :var table="./filename_example-table.tsv"]()>>
   dim(table)
   #+END_SRC
   :END:


----------

#+BEGIN_SRC elisp :wrap QUOTE :exports results
(format "This code was tested using  \n%s  \norg-mode version: %s " (version) (org-version))
#+END_SRC

#+RESULTS:
#+BEGIN_QUOTE
This code was tested using  
GNU Emacs 24.5.1 (x86_64-unknown-cygwin, GTK+ Version 3.14.13)
 of 2015-06-23 on desktop-new  
org-mode version: 9.0 
#+END_QUOTE

** COMMENT Export Settings                                                :noexport:

#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:{} arch:headline
#+OPTIONS: author:nil broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:nil e:t email:nil f:t inline:t num:nil
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:nil title:nil toc:nil todo:t |:t
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 24.5.1 (Org mode 9.0)
